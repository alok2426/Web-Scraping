# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p-o_Xf7C0M1EnzQ9U4TahBHZTdo6iZzq
"""

!pip install spotipy pandas openpyxl

import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
import pandas as pd

# ---------- AUTHENTICATION ----------
client_id = "40f6a9a4797c4617a58898f97cac3a8e"
client_secret = "7d1e54517c0643af90a1a7bcdd8f9860"

sp = spotipy.Spotify(auth_manager=SpotifyClientCredentials(
    client_id=client_id,
    client_secret=client_secret
))

# ---------- HELPER FUNCTION ----------
def search_spotify(query, search_type, limit=50):
    results = sp.search(q=query, type=search_type, limit=limit)
    return results.get(search_type + 's', {}).get('items', [])

def convert_duration(ms):
    seconds = ms // 1000
    minutes = seconds // 60
    seconds = seconds % 60
    return f"{minutes}:{str(seconds).zfill(2)}"

# ---------- SEARCH QUERY ----------
query = "Kabir Singh"

# ---------- TRACKS ----------
tracks = search_spotify(query, "track")
tracks_data = []

for t in tracks:
    if not t:
        continue
    duration_ms = t.get('duration_ms', 0)
    duration_str = convert_duration(duration_ms)
    tracks_data.append({
        "Track Name": t.get('name', 'N/A'),
        "Album": t.get('album', {}).get('name', 'N/A'),
        "Artist": ", ".join([artist['name'] for artist in t.get('artists', [])]),
        "Release Date": t.get('album', {}).get('release_date', 'N/A'),
        "Duration (ms)": duration_ms,
        "Duration (mm:ss)": duration_str,
        "Spotify URL": t.get('external_urls', {}).get('spotify', 'N/A')
    })

# ---------- ALBUMS ----------
albums = search_spotify(query, "album")
albums_data = [{
    "Album Name": a.get('name', 'N/A'),
    "Artist": ", ".join([artist['name'] for artist in a.get('artists', [])]),
    "Release Date": a.get('release_date', 'N/A'),
    "Total Tracks": a.get('total_tracks', 0),
    "Spotify URL": a.get('external_urls', {}).get('spotify', 'N/A')
} for a in albums if a]

# ---------- ARTISTS ----------
artists = search_spotify(query, "artist")
artists_data = [{
    "Artist Name": ar.get('name', 'N/A'),
    "Followers": ar.get('followers', {}).get('total', 0),
    "Genres": ", ".join(ar.get('genres', [])),
    "Popularity": ar.get('popularity', 0),
    "Spotify URL": ar.get('external_urls', {}).get('spotify', 'N/A')
} for ar in artists if ar]

# ---------- PLAYLISTS ----------
playlists = search_spotify(query, "playlist")
playlists_data = []

for p in playlists:
    if p is None:
        continue
    try:
        playlists_data.append({
            "Playlist Name": p.get('name', 'N/A'),
            "Owner": p.get('owner', {}).get('display_name', 'N/A'),
            "Tracks Count": p.get('tracks', {}).get('total', 0),
            "Spotify URL": p.get('external_urls', {}).get('spotify', 'N/A')
        })
    except Exception as e:
        print("Error processing playlist:", e)
        continue

# ---------- SAVE TO EXCEL ----------
filename = "Spotify_Kabir_Singh.xlsx"
with pd.ExcelWriter(filename, engine='openpyxl') as writer:
    pd.DataFrame(tracks_data).to_excel(writer, sheet_name='Tracks', index=False)
    pd.DataFrame(albums_data).to_excel(writer, sheet_name='Albums', index=False)
    pd.DataFrame(artists_data).to_excel(writer, sheet_name='Artists', index=False)
    pd.DataFrame(playlists_data).to_excel(writer, sheet_name='Playlists', index=False)

print("âœ… Data saved to", filename)